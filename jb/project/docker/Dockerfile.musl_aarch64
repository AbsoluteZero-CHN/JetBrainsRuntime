# NOTE: This Dockerfile is meant to be used from the mkdocker_musl_aarch64.sh script.

# Pull a concrete version of Linux that does NOT recieve updates after it's
# been created.  This is so that the image is as stable as possible to make
# image creation reproducible.
# NB: this also means there may be no security-related fixes there, need to
# move the version to the next manually.
FROM arm64v8/alpine:3.12

# Install the necessary build tools
RUN apk --no-cache add --update \
      alsa-lib-dev=1.2.2-r0 \
      autoconf=2.69-r2 \
      bash=5.0.17-r0 \
      build-base=0.5-r2 \
      bzip2=1.0.8-r1 \
      cups-dev=2.3.3-r0 \
      file=5.38-r0 \
      fontconfig=2.13.1-r2 \
      fontconfig-dev=2.13.1-r2 \
      freetype-dev=2.10.4-r2 \
      git=2.26.3-r1 \
      grep=3.4-r0 \
      libx11-dev=1.6.12-r1 \
      libxext-dev=1.3.4-r0 \
      libxrandr-dev=1.5.2-r0 \
      libxrender-dev=0.9.10-r3 \
      libxt-dev=1.2.0-r0 \
      libxtst-dev=1.2.3-r3 \
      linux-headers=5.4.5-r1 \
      rsync=3.1.3-r3 \
      tar=1.32-r2 \
      wayland-dev=1.18.0-r4 \
      zip=3.0-r8


# Set up boot JDK for building
COPY boot_jdk_musl_aarch64.tar.gz /jdk20/
RUN cd /jdk20 && tar --strip-components=1 -xzf boot_jdk_musl_aarch64.tar.gz && rm /jdk20/boot_jdk_musl_aarch64.tar.gz
ENV BOOT_JDK=/jdk20

RUN git config --global user.email "teamcity@jetbrains.com" && \
    git config --global user.name "builduser"
